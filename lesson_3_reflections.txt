When would you want to use a remote repository rather than keeping all your work
local?

    It makes it easier to collaborate with other programmers when you have your
    code hosted in a remote repository that they can access. With larger 
    programs, it prevents the code form taking up too much space on your hard
    drive. It's also accessible from anywhere that you can gain access to an
    internet connection more or less.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    It allows you to make meaningful commits based on logical changes to the
    code, and those changes you make locally. If you had branches auto
    updating, it could create a lot of meaningless commits or possibly 
    interfere with a local commit you are working on.
    
Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forking a repository gives you access to a clone of that repository within
    your git repo, but it has appropriate credit and traceability to the original
    author of the code. Cloning can be done on the local or remote repository and
    simply copies files line for line, including branch history. Branches are
    the history of a program, containing each logical change within each commmit.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
